// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#ifndef PROTOBUF_cs_2eproto__INCLUDED
#define PROTOBUF_cs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "comm.pb.h"
// @@protoc_insertion_point(includes)

namespace cs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cs_2eproto();
void protobuf_AssignDesc_cs_2eproto();
void protobuf_ShutdownFile_cs_2eproto();

class CSMsgHead;
class CSMsgLoginReq;
class CSMsgLoginRes;
class CSMsgLogin;
class CSMsg;

// ===================================================================

class CSMsgHead : public ::google::protobuf::Message {
 public:
  CSMsgHead();
  virtual ~CSMsgHead();

  CSMsgHead(const CSMsgHead& from);

  inline CSMsgHead& operator=(const CSMsgHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgHead& default_instance();

  void Swap(CSMsgHead* other);

  // implements Message ----------------------------------------------

  CSMsgHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgHead& from);
  void MergeFrom(const CSMsgHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cookie = 1;
  inline bool has_cookie() const;
  inline void clear_cookie();
  static const int kCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 cookie() const;
  inline void set_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.CSMsgHead)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cookie_;
  friend void  protobuf_AddDesc_cs_2eproto();
  friend void protobuf_AssignDesc_cs_2eproto();
  friend void protobuf_ShutdownFile_cs_2eproto();

  void InitAsDefaultInstance();
  static CSMsgHead* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgLoginReq : public ::google::protobuf::Message {
 public:
  CSMsgLoginReq();
  virtual ~CSMsgLoginReq();

  CSMsgLoginReq(const CSMsgLoginReq& from);

  inline CSMsgLoginReq& operator=(const CSMsgLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgLoginReq& default_instance();

  void Swap(CSMsgLoginReq* other);

  // implements Message ----------------------------------------------

  CSMsgLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgLoginReq& from);
  void MergeFrom(const CSMsgLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.CSMsgLoginReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_cs_2eproto();
  friend void protobuf_AssignDesc_cs_2eproto();
  friend void protobuf_ShutdownFile_cs_2eproto();

  void InitAsDefaultInstance();
  static CSMsgLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgLoginRes : public ::google::protobuf::Message {
 public:
  CSMsgLoginRes();
  virtual ~CSMsgLoginRes();

  CSMsgLoginRes(const CSMsgLoginRes& from);

  inline CSMsgLoginRes& operator=(const CSMsgLoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgLoginRes& default_instance();

  void Swap(CSMsgLoginRes* other);

  // implements Message ----------------------------------------------

  CSMsgLoginRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgLoginRes& from);
  void MergeFrom(const CSMsgLoginRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cs.CSMsgLoginRes)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_cs_2eproto();
  friend void protobuf_AssignDesc_cs_2eproto();
  friend void protobuf_ShutdownFile_cs_2eproto();

  void InitAsDefaultInstance();
  static CSMsgLoginRes* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgLogin : public ::google::protobuf::Message {
 public:
  CSMsgLogin();
  virtual ~CSMsgLogin();

  CSMsgLogin(const CSMsgLogin& from);

  inline CSMsgLogin& operator=(const CSMsgLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgLogin& default_instance();

  void Swap(CSMsgLogin* other);

  // implements Message ----------------------------------------------

  CSMsgLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgLogin& from);
  void MergeFrom(const CSMsgLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .cs.CSMsgLoginReq req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline const ::cs::CSMsgLoginReq& req() const;
  inline ::cs::CSMsgLoginReq* mutable_req();
  inline ::cs::CSMsgLoginReq* release_req();
  inline void set_allocated_req(::cs::CSMsgLoginReq* req);

  // optional .cs.CSMsgLoginRes res = 2;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 2;
  inline const ::cs::CSMsgLoginRes& res() const;
  inline ::cs::CSMsgLoginRes* mutable_res();
  inline ::cs::CSMsgLoginRes* release_res();
  inline void set_allocated_res(::cs::CSMsgLoginRes* res);

  // @@protoc_insertion_point(class_scope:cs.CSMsgLogin)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::cs::CSMsgLoginReq* req_;
  ::cs::CSMsgLoginRes* res_;
  friend void  protobuf_AddDesc_cs_2eproto();
  friend void protobuf_AssignDesc_cs_2eproto();
  friend void protobuf_ShutdownFile_cs_2eproto();

  void InitAsDefaultInstance();
  static CSMsgLogin* default_instance_;
};
// -------------------------------------------------------------------

class CSMsg : public ::google::protobuf::Message {
 public:
  CSMsg();
  virtual ~CSMsg();

  CSMsg(const CSMsg& from);

  inline CSMsg& operator=(const CSMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsg& default_instance();

  void Swap(CSMsg* other);

  // implements Message ----------------------------------------------

  CSMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsg& from);
  void MergeFrom(const CSMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // required .cs.CSMsgHead head = 2;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 2;
  inline const ::cs::CSMsgHead& head() const;
  inline ::cs::CSMsgHead* mutable_head();
  inline ::cs::CSMsgHead* release_head();
  inline void set_allocated_head(::cs::CSMsgHead* head);

  // optional .cs.CSMsgLogin login = 3;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 3;
  inline const ::cs::CSMsgLogin& login() const;
  inline ::cs::CSMsgLogin* mutable_login();
  inline ::cs::CSMsgLogin* release_login();
  inline void set_allocated_login(::cs::CSMsgLogin* login);

  // optional .CommBase base = 4;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 4;
  inline const ::CommBase& base() const;
  inline ::CommBase* mutable_base();
  inline ::CommBase* release_base();
  inline void set_allocated_base(::CommBase* base);

  // @@protoc_insertion_point(class_scope:cs.CSMsg)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has_base();
  inline void clear_has_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::cs::CSMsgHead* head_;
  ::cs::CSMsgLogin* login_;
  ::CommBase* base_;
  ::google::protobuf::uint32 cmd_;
  friend void  protobuf_AddDesc_cs_2eproto();
  friend void protobuf_AssignDesc_cs_2eproto();
  friend void protobuf_ShutdownFile_cs_2eproto();

  void InitAsDefaultInstance();
  static CSMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// CSMsgHead

// optional uint32 cookie = 1;
inline bool CSMsgHead::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgHead::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgHead::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgHead::clear_cookie() {
  cookie_ = 0u;
  clear_has_cookie();
}
inline ::google::protobuf::uint32 CSMsgHead::cookie() const {
  // @@protoc_insertion_point(field_get:cs.CSMsgHead.cookie)
  return cookie_;
}
inline void CSMsgHead::set_cookie(::google::protobuf::uint32 value) {
  set_has_cookie();
  cookie_ = value;
  // @@protoc_insertion_point(field_set:cs.CSMsgHead.cookie)
}

// -------------------------------------------------------------------

// CSMsgLoginReq

// optional uint32 id = 1;
inline bool CSMsgLoginReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgLoginReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgLoginReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgLoginReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSMsgLoginReq::id() const {
  // @@protoc_insertion_point(field_get:cs.CSMsgLoginReq.id)
  return id_;
}
inline void CSMsgLoginReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:cs.CSMsgLoginReq.id)
}

// -------------------------------------------------------------------

// CSMsgLoginRes

// optional uint32 id = 1;
inline bool CSMsgLoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgLoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgLoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgLoginRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSMsgLoginRes::id() const {
  // @@protoc_insertion_point(field_get:cs.CSMsgLoginRes.id)
  return id_;
}
inline void CSMsgLoginRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:cs.CSMsgLoginRes.id)
}

// -------------------------------------------------------------------

// CSMsgLogin

// optional .cs.CSMsgLoginReq req = 1;
inline bool CSMsgLogin::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgLogin::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgLogin::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgLogin::clear_req() {
  if (req_ != NULL) req_->::cs::CSMsgLoginReq::Clear();
  clear_has_req();
}
inline const ::cs::CSMsgLoginReq& CSMsgLogin::req() const {
  // @@protoc_insertion_point(field_get:cs.CSMsgLogin.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::cs::CSMsgLoginReq* CSMsgLogin::mutable_req() {
  set_has_req();
  if (req_ == NULL) req_ = new ::cs::CSMsgLoginReq;
  // @@protoc_insertion_point(field_mutable:cs.CSMsgLogin.req)
  return req_;
}
inline ::cs::CSMsgLoginReq* CSMsgLogin::release_req() {
  clear_has_req();
  ::cs::CSMsgLoginReq* temp = req_;
  req_ = NULL;
  return temp;
}
inline void CSMsgLogin::set_allocated_req(::cs::CSMsgLoginReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:cs.CSMsgLogin.req)
}

// optional .cs.CSMsgLoginRes res = 2;
inline bool CSMsgLogin::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgLogin::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgLogin::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgLogin::clear_res() {
  if (res_ != NULL) res_->::cs::CSMsgLoginRes::Clear();
  clear_has_res();
}
inline const ::cs::CSMsgLoginRes& CSMsgLogin::res() const {
  // @@protoc_insertion_point(field_get:cs.CSMsgLogin.res)
  return res_ != NULL ? *res_ : *default_instance_->res_;
}
inline ::cs::CSMsgLoginRes* CSMsgLogin::mutable_res() {
  set_has_res();
  if (res_ == NULL) res_ = new ::cs::CSMsgLoginRes;
  // @@protoc_insertion_point(field_mutable:cs.CSMsgLogin.res)
  return res_;
}
inline ::cs::CSMsgLoginRes* CSMsgLogin::release_res() {
  clear_has_res();
  ::cs::CSMsgLoginRes* temp = res_;
  res_ = NULL;
  return temp;
}
inline void CSMsgLogin::set_allocated_res(::cs::CSMsgLoginRes* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:cs.CSMsgLogin.res)
}

// -------------------------------------------------------------------

// CSMsg

// required uint32 cmd = 1;
inline bool CSMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsg::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 CSMsg::cmd() const {
  // @@protoc_insertion_point(field_get:cs.CSMsg.cmd)
  return cmd_;
}
inline void CSMsg::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:cs.CSMsg.cmd)
}

// required .cs.CSMsgHead head = 2;
inline bool CSMsg::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsg::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsg::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsg::clear_head() {
  if (head_ != NULL) head_->::cs::CSMsgHead::Clear();
  clear_has_head();
}
inline const ::cs::CSMsgHead& CSMsg::head() const {
  // @@protoc_insertion_point(field_get:cs.CSMsg.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::cs::CSMsgHead* CSMsg::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::cs::CSMsgHead;
  // @@protoc_insertion_point(field_mutable:cs.CSMsg.head)
  return head_;
}
inline ::cs::CSMsgHead* CSMsg::release_head() {
  clear_has_head();
  ::cs::CSMsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void CSMsg::set_allocated_head(::cs::CSMsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:cs.CSMsg.head)
}

// optional .cs.CSMsgLogin login = 3;
inline bool CSMsg::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMsg::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMsg::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMsg::clear_login() {
  if (login_ != NULL) login_->::cs::CSMsgLogin::Clear();
  clear_has_login();
}
inline const ::cs::CSMsgLogin& CSMsg::login() const {
  // @@protoc_insertion_point(field_get:cs.CSMsg.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
inline ::cs::CSMsgLogin* CSMsg::mutable_login() {
  set_has_login();
  if (login_ == NULL) login_ = new ::cs::CSMsgLogin;
  // @@protoc_insertion_point(field_mutable:cs.CSMsg.login)
  return login_;
}
inline ::cs::CSMsgLogin* CSMsg::release_login() {
  clear_has_login();
  ::cs::CSMsgLogin* temp = login_;
  login_ = NULL;
  return temp;
}
inline void CSMsg::set_allocated_login(::cs::CSMsgLogin* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:cs.CSMsg.login)
}

// optional .CommBase base = 4;
inline bool CSMsg::has_base() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMsg::set_has_base() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMsg::clear_has_base() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMsg::clear_base() {
  if (base_ != NULL) base_->::CommBase::Clear();
  clear_has_base();
}
inline const ::CommBase& CSMsg::base() const {
  // @@protoc_insertion_point(field_get:cs.CSMsg.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::CommBase* CSMsg::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::CommBase;
  // @@protoc_insertion_point(field_mutable:cs.CSMsg.base)
  return base_;
}
inline ::CommBase* CSMsg::release_base() {
  clear_has_base();
  ::CommBase* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CSMsg::set_allocated_base(::CommBase* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:cs.CSMsg.base)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cs_2eproto__INCLUDED
