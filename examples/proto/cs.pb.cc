// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cs {

namespace {

const ::google::protobuf::Descriptor* CSMsgHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSMsgHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSMsgLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSMsgLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSMsgLoginRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSMsgLoginRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSMsgLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSMsgLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cs_2eproto() {
  protobuf_AddDesc_cs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cs.proto");
  GOOGLE_CHECK(file != NULL);
  CSMsgHead_descriptor_ = file->message_type(0);
  static const int CSMsgHead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgHead, cookie_),
  };
  CSMsgHead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSMsgHead_descriptor_,
      CSMsgHead::default_instance_,
      CSMsgHead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgHead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgHead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSMsgHead));
  CSMsgLoginReq_descriptor_ = file->message_type(1);
  static const int CSMsgLoginReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginReq, id_),
  };
  CSMsgLoginReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSMsgLoginReq_descriptor_,
      CSMsgLoginReq::default_instance_,
      CSMsgLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSMsgLoginReq));
  CSMsgLoginRes_descriptor_ = file->message_type(2);
  static const int CSMsgLoginRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginRes, id_),
  };
  CSMsgLoginRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSMsgLoginRes_descriptor_,
      CSMsgLoginRes::default_instance_,
      CSMsgLoginRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLoginRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSMsgLoginRes));
  CSMsgLogin_descriptor_ = file->message_type(3);
  static const int CSMsgLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLogin, req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLogin, res_),
  };
  CSMsgLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSMsgLogin_descriptor_,
      CSMsgLogin::default_instance_,
      CSMsgLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsgLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSMsgLogin));
  CSMsg_descriptor_ = file->message_type(4);
  static const int CSMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, base_),
  };
  CSMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSMsg_descriptor_,
      CSMsg::default_instance_,
      CSMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSMsgHead_descriptor_, &CSMsgHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSMsgLoginReq_descriptor_, &CSMsgLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSMsgLoginRes_descriptor_, &CSMsgLoginRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSMsgLogin_descriptor_, &CSMsgLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSMsg_descriptor_, &CSMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cs_2eproto() {
  delete CSMsgHead::default_instance_;
  delete CSMsgHead_reflection_;
  delete CSMsgLoginReq::default_instance_;
  delete CSMsgLoginReq_reflection_;
  delete CSMsgLoginRes::default_instance_;
  delete CSMsgLoginRes_reflection_;
  delete CSMsgLogin::default_instance_;
  delete CSMsgLogin_reflection_;
  delete CSMsg::default_instance_;
  delete CSMsg_reflection_;
}

void protobuf_AddDesc_cs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_comm_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010cs.proto\022\002cs\032\ncomm.proto\"\033\n\tCSMsgHead\022"
    "\016\n\006cookie\030\001 \001(\r\"\033\n\rCSMsgLoginReq\022\n\n\002id\030\001"
    " \001(\r\"\033\n\rCSMsgLoginRes\022\n\n\002id\030\001 \001(\r\"L\n\nCSM"
    "sgLogin\022\036\n\003req\030\001 \001(\0132\021.cs.CSMsgLoginReq\022"
    "\036\n\003res\030\002 \001(\0132\021.cs.CSMsgLoginRes\"i\n\005CSMsg"
    "\022\013\n\003cmd\030\001 \002(\r\022\033\n\004head\030\002 \002(\0132\r.cs.CSMsgHe"
    "ad\022\035\n\005login\030\003 \001(\0132\016.cs.CSMsgLogin\022\027\n\004bas"
    "e\030\004 \001(\0132\t.CommBase", 298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cs.proto", &protobuf_RegisterTypes);
  CSMsgHead::default_instance_ = new CSMsgHead();
  CSMsgLoginReq::default_instance_ = new CSMsgLoginReq();
  CSMsgLoginRes::default_instance_ = new CSMsgLoginRes();
  CSMsgLogin::default_instance_ = new CSMsgLogin();
  CSMsg::default_instance_ = new CSMsg();
  CSMsgHead::default_instance_->InitAsDefaultInstance();
  CSMsgLoginReq::default_instance_->InitAsDefaultInstance();
  CSMsgLoginRes::default_instance_->InitAsDefaultInstance();
  CSMsgLogin::default_instance_->InitAsDefaultInstance();
  CSMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cs_2eproto {
  StaticDescriptorInitializer_cs_2eproto() {
    protobuf_AddDesc_cs_2eproto();
  }
} static_descriptor_initializer_cs_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CSMsgHead::kCookieFieldNumber;
#endif  // !_MSC_VER

CSMsgHead::CSMsgHead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.CSMsgHead)
}

void CSMsgHead::InitAsDefaultInstance() {
}

CSMsgHead::CSMsgHead(const CSMsgHead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cs.CSMsgHead)
}

void CSMsgHead::SharedCtor() {
  _cached_size_ = 0;
  cookie_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSMsgHead::~CSMsgHead() {
  // @@protoc_insertion_point(destructor:cs.CSMsgHead)
  SharedDtor();
}

void CSMsgHead::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSMsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSMsgHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSMsgHead_descriptor_;
}

const CSMsgHead& CSMsgHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cs_2eproto();
  return *default_instance_;
}

CSMsgHead* CSMsgHead::default_instance_ = NULL;

CSMsgHead* CSMsgHead::New() const {
  return new CSMsgHead;
}

void CSMsgHead::Clear() {
  cookie_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSMsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.CSMsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cookie = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cookie_)));
          set_has_cookie();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.CSMsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.CSMsgHead)
  return false;
#undef DO_
}

void CSMsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.CSMsgHead)
  // optional uint32 cookie = 1;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cookie(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cs.CSMsgHead)
}

::google::protobuf::uint8* CSMsgHead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.CSMsgHead)
  // optional uint32 cookie = 1;
  if (has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cookie(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cs.CSMsgHead)
  return target;
}

int CSMsgHead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 cookie = 1;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cookie());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSMsgHead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSMsgHead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSMsgHead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSMsgHead::MergeFrom(const CSMsgHead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cookie()) {
      set_cookie(from.cookie());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSMsgHead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSMsgHead::CopyFrom(const CSMsgHead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSMsgHead::IsInitialized() const {

  return true;
}

void CSMsgHead::Swap(CSMsgHead* other) {
  if (other != this) {
    std::swap(cookie_, other->cookie_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSMsgHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSMsgHead_descriptor_;
  metadata.reflection = CSMsgHead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSMsgLoginReq::kIdFieldNumber;
#endif  // !_MSC_VER

CSMsgLoginReq::CSMsgLoginReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.CSMsgLoginReq)
}

void CSMsgLoginReq::InitAsDefaultInstance() {
}

CSMsgLoginReq::CSMsgLoginReq(const CSMsgLoginReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cs.CSMsgLoginReq)
}

void CSMsgLoginReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSMsgLoginReq::~CSMsgLoginReq() {
  // @@protoc_insertion_point(destructor:cs.CSMsgLoginReq)
  SharedDtor();
}

void CSMsgLoginReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSMsgLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSMsgLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSMsgLoginReq_descriptor_;
}

const CSMsgLoginReq& CSMsgLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cs_2eproto();
  return *default_instance_;
}

CSMsgLoginReq* CSMsgLoginReq::default_instance_ = NULL;

CSMsgLoginReq* CSMsgLoginReq::New() const {
  return new CSMsgLoginReq;
}

void CSMsgLoginReq::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSMsgLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.CSMsgLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.CSMsgLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.CSMsgLoginReq)
  return false;
#undef DO_
}

void CSMsgLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.CSMsgLoginReq)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cs.CSMsgLoginReq)
}

::google::protobuf::uint8* CSMsgLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.CSMsgLoginReq)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cs.CSMsgLoginReq)
  return target;
}

int CSMsgLoginReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSMsgLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSMsgLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSMsgLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSMsgLoginReq::MergeFrom(const CSMsgLoginReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSMsgLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSMsgLoginReq::CopyFrom(const CSMsgLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSMsgLoginReq::IsInitialized() const {

  return true;
}

void CSMsgLoginReq::Swap(CSMsgLoginReq* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSMsgLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSMsgLoginReq_descriptor_;
  metadata.reflection = CSMsgLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSMsgLoginRes::kIdFieldNumber;
#endif  // !_MSC_VER

CSMsgLoginRes::CSMsgLoginRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.CSMsgLoginRes)
}

void CSMsgLoginRes::InitAsDefaultInstance() {
}

CSMsgLoginRes::CSMsgLoginRes(const CSMsgLoginRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cs.CSMsgLoginRes)
}

void CSMsgLoginRes::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSMsgLoginRes::~CSMsgLoginRes() {
  // @@protoc_insertion_point(destructor:cs.CSMsgLoginRes)
  SharedDtor();
}

void CSMsgLoginRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSMsgLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSMsgLoginRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSMsgLoginRes_descriptor_;
}

const CSMsgLoginRes& CSMsgLoginRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cs_2eproto();
  return *default_instance_;
}

CSMsgLoginRes* CSMsgLoginRes::default_instance_ = NULL;

CSMsgLoginRes* CSMsgLoginRes::New() const {
  return new CSMsgLoginRes;
}

void CSMsgLoginRes::Clear() {
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSMsgLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.CSMsgLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.CSMsgLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.CSMsgLoginRes)
  return false;
#undef DO_
}

void CSMsgLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.CSMsgLoginRes)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cs.CSMsgLoginRes)
}

::google::protobuf::uint8* CSMsgLoginRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.CSMsgLoginRes)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cs.CSMsgLoginRes)
  return target;
}

int CSMsgLoginRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSMsgLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSMsgLoginRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSMsgLoginRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSMsgLoginRes::MergeFrom(const CSMsgLoginRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSMsgLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSMsgLoginRes::CopyFrom(const CSMsgLoginRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSMsgLoginRes::IsInitialized() const {

  return true;
}

void CSMsgLoginRes::Swap(CSMsgLoginRes* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSMsgLoginRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSMsgLoginRes_descriptor_;
  metadata.reflection = CSMsgLoginRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSMsgLogin::kReqFieldNumber;
const int CSMsgLogin::kResFieldNumber;
#endif  // !_MSC_VER

CSMsgLogin::CSMsgLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.CSMsgLogin)
}

void CSMsgLogin::InitAsDefaultInstance() {
  req_ = const_cast< ::cs::CSMsgLoginReq*>(&::cs::CSMsgLoginReq::default_instance());
  res_ = const_cast< ::cs::CSMsgLoginRes*>(&::cs::CSMsgLoginRes::default_instance());
}

CSMsgLogin::CSMsgLogin(const CSMsgLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cs.CSMsgLogin)
}

void CSMsgLogin::SharedCtor() {
  _cached_size_ = 0;
  req_ = NULL;
  res_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSMsgLogin::~CSMsgLogin() {
  // @@protoc_insertion_point(destructor:cs.CSMsgLogin)
  SharedDtor();
}

void CSMsgLogin::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
    delete res_;
  }
}

void CSMsgLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSMsgLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSMsgLogin_descriptor_;
}

const CSMsgLogin& CSMsgLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cs_2eproto();
  return *default_instance_;
}

CSMsgLogin* CSMsgLogin::default_instance_ = NULL;

CSMsgLogin* CSMsgLogin::New() const {
  return new CSMsgLogin;
}

void CSMsgLogin::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_req()) {
      if (req_ != NULL) req_->::cs::CSMsgLoginReq::Clear();
    }
    if (has_res()) {
      if (res_ != NULL) res_->::cs::CSMsgLoginRes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSMsgLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.CSMsgLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cs.CSMsgLoginReq req = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_res;
        break;
      }

      // optional .cs.CSMsgLoginRes res = 2;
      case 2: {
        if (tag == 18) {
         parse_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.CSMsgLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.CSMsgLogin)
  return false;
#undef DO_
}

void CSMsgLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.CSMsgLogin)
  // optional .cs.CSMsgLoginReq req = 1;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->req(), output);
  }

  // optional .cs.CSMsgLoginRes res = 2;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cs.CSMsgLogin)
}

::google::protobuf::uint8* CSMsgLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.CSMsgLogin)
  // optional .cs.CSMsgLoginReq req = 1;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->req(), target);
  }

  // optional .cs.CSMsgLoginRes res = 2;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cs.CSMsgLogin)
  return target;
}

int CSMsgLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .cs.CSMsgLoginReq req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req());
    }

    // optional .cs.CSMsgLoginRes res = 2;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSMsgLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSMsgLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSMsgLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSMsgLogin::MergeFrom(const CSMsgLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req()) {
      mutable_req()->::cs::CSMsgLoginReq::MergeFrom(from.req());
    }
    if (from.has_res()) {
      mutable_res()->::cs::CSMsgLoginRes::MergeFrom(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSMsgLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSMsgLogin::CopyFrom(const CSMsgLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSMsgLogin::IsInitialized() const {

  return true;
}

void CSMsgLogin::Swap(CSMsgLogin* other) {
  if (other != this) {
    std::swap(req_, other->req_);
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSMsgLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSMsgLogin_descriptor_;
  metadata.reflection = CSMsgLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSMsg::kCmdFieldNumber;
const int CSMsg::kHeadFieldNumber;
const int CSMsg::kLoginFieldNumber;
const int CSMsg::kBaseFieldNumber;
#endif  // !_MSC_VER

CSMsg::CSMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.CSMsg)
}

void CSMsg::InitAsDefaultInstance() {
  head_ = const_cast< ::cs::CSMsgHead*>(&::cs::CSMsgHead::default_instance());
  login_ = const_cast< ::cs::CSMsgLogin*>(&::cs::CSMsgLogin::default_instance());
  base_ = const_cast< ::CommBase*>(&::CommBase::default_instance());
}

CSMsg::CSMsg(const CSMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cs.CSMsg)
}

void CSMsg::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0u;
  head_ = NULL;
  login_ = NULL;
  base_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSMsg::~CSMsg() {
  // @@protoc_insertion_point(destructor:cs.CSMsg)
  SharedDtor();
}

void CSMsg::SharedDtor() {
  if (this != default_instance_) {
    delete head_;
    delete login_;
    delete base_;
  }
}

void CSMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSMsg_descriptor_;
}

const CSMsg& CSMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cs_2eproto();
  return *default_instance_;
}

CSMsg* CSMsg::default_instance_ = NULL;

CSMsg* CSMsg::New() const {
  return new CSMsg;
}

void CSMsg::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    cmd_ = 0u;
    if (has_head()) {
      if (head_ != NULL) head_->::cs::CSMsgHead::Clear();
    }
    if (has_login()) {
      if (login_ != NULL) login_->::cs::CSMsgLogin::Clear();
    }
    if (has_base()) {
      if (base_ != NULL) base_->::CommBase::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.CSMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cmd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_head;
        break;
      }

      // required .cs.CSMsgHead head = 2;
      case 2: {
        if (tag == 18) {
         parse_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_login;
        break;
      }

      // optional .cs.CSMsgLogin login = 3;
      case 3: {
        if (tag == 26) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_base;
        break;
      }

      // optional .CommBase base = 4;
      case 4: {
        if (tag == 34) {
         parse_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.CSMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.CSMsg)
  return false;
#undef DO_
}

void CSMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.CSMsg)
  // required uint32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // required .cs.CSMsgHead head = 2;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->head(), output);
  }

  // optional .cs.CSMsgLogin login = 3;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->login(), output);
  }

  // optional .CommBase base = 4;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->base(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cs.CSMsg)
}

::google::protobuf::uint8* CSMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.CSMsg)
  // required uint32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // required .cs.CSMsgHead head = 2;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->head(), target);
  }

  // optional .cs.CSMsgLogin login = 3;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->login(), target);
  }

  // optional .CommBase base = 4;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->base(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cs.CSMsg)
  return target;
}

int CSMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cmd());
    }

    // required .cs.CSMsgHead head = 2;
    if (has_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->head());
    }

    // optional .cs.CSMsgLogin login = 3;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login());
    }

    // optional .CommBase base = 4;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSMsg::MergeFrom(const CSMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_head()) {
      mutable_head()->::cs::CSMsgHead::MergeFrom(from.head());
    }
    if (from.has_login()) {
      mutable_login()->::cs::CSMsgLogin::MergeFrom(from.login());
    }
    if (from.has_base()) {
      mutable_base()->::CommBase::MergeFrom(from.base());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSMsg::CopyFrom(const CSMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  return true;
}

void CSMsg::Swap(CSMsg* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(head_, other->head_);
    std::swap(login_, other->login_);
    std::swap(base_, other->base_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSMsg_descriptor_;
  metadata.reflection = CSMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cs

// @@protoc_insertion_point(global_scope)
