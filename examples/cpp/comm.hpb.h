#pragma once

//this file is auto generated by (hbpex)[https://github.com/jj4jj/hpbex.git] , don't edit this file !
//file generate datetime: Mon Dec  7 19:53:37 2015

#include <algorithm>
#include "comm.pb.h"



struct CommBase_ST {
    uint32_t		id;
    uint32_t		level;
    	
    //////////////member functions///////////////////////////////////
    void		construct() {
        if(sizeof(*this) < 1024) { memset(this,0,sizeof(*this)); return ;}
        id = 0;
        level = 0;
    }
    void		convto(CommBase & convtomsg_) const {
        convtomsg_.set_id(id);
        convtomsg_.set_level(level);
    }
    void		convfrom(const CommBase & convfrommsg_) {
        id = convfrommsg_.id();
        level = convfrommsg_.level();
    }
    int		compare(const CommBase_ST & rhs_) const {
        int _cmp_ret = 0;
        _cmp_ret = (id < rhs_.id) ? -1 : ((id == rhs_.id) ? 0 : 1);
        if (_cmp_ret != 0) { return _cmp_ret; }
        _cmp_ret = (level < rhs_.level) ? -1 : ((level == rhs_.level) ? 0 : 1);
        if (_cmp_ret != 0) { return _cmp_ret; }
        return 0;
    }
    bool		operator == (const CommBase_ST & rhs_) const {
        return this->compare(rhs_) == 0;
    }
    bool		operator < (const CommBase_ST & rhs_) const {
        return this->compare(rhs_) < 0;
    }
};


